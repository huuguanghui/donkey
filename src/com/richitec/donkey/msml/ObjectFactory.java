//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-548 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.29 at 03:35:44 ���� CST 
//


package com.richitec.donkey.msml;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.richitec.donkey.msml2 package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _DtmfDtmfexitExit_QNAME = new QName("", "exit");
    private final static QName _EventName_QNAME = new QName("", "name");
    private final static QName _EventValue_QNAME = new QName("", "value");
    private final static QName _Control_QNAME = new QName("", "control");
    private final static QName _Record_QNAME = new QName("", "record");
    private final static QName _Var_QNAME = new QName("", "var");
    private final static QName _Play_QNAME = new QName("", "play");
    private final static QName _Dtmf_QNAME = new QName("", "dtmf");
    private final static QName _Media_QNAME = new QName("", "media");
    private final static QName _Primitive_QNAME = new QName("", "primitive");
    private final static QName _Dtmfgen_QNAME = new QName("", "dtmfgen");
    private final static QName _PlayAudio_QNAME = new QName("", "audio");
    private final static QName _MsmlResultConfid_QNAME = new QName("", "confid");
    private final static QName _MsmlResultDialogid_QNAME = new QName("", "dialogid");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.richitec.donkey.msml2
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Dtmf.Dtmfexit }
     * 
     */
    public Dtmf.Dtmfexit createDtmfDtmfexit() {
        return new Dtmf.Dtmfexit();
    }

    /**
     * Create an instance of {@link SelectorType }
     * 
     */
    public SelectorType createSelectorType() {
        return new SelectorType();
    }

    /**
     * Create an instance of {@link Dtmfgen }
     * 
     */
    public Dtmfgen createDtmfgen() {
        return new Dtmfgen();
    }

    /**
     * Create an instance of {@link Send }
     * 
     */
    public Send createSend() {
        return new Send();
    }

    /**
     * Create an instance of {@link Record.Recordexit }
     * 
     */
    public Record.Recordexit createRecordRecordexit() {
        return new Record.Recordexit();
    }

    /**
     * Create an instance of {@link VideolayoutType }
     * 
     */
    public VideolayoutType createVideolayoutType() {
        return new VideolayoutType();
    }

    /**
     * Create an instance of {@link MediaType }
     * 
     */
    public MediaType createMediaType() {
        return new MediaType();
    }

    /**
     * Create an instance of {@link Msml.Event }
     * 
     */
    public Msml.Event createMsmlEvent() {
        return new Msml.Event();
    }

    /**
     * Create an instance of {@link Msml.Modifyconference }
     * 
     */
    public Msml.Modifyconference createMsmlModifyconference() {
        return new Msml.Modifyconference();
    }

    /**
     * Create an instance of {@link AudiomixType.NLoudest }
     * 
     */
    public AudiomixType.NLoudest createAudiomixTypeNLoudest() {
        return new AudiomixType.NLoudest();
    }

    /**
     * Create an instance of {@link Moml }
     * 
     */
    public Moml createMoml() {
        return new Moml();
    }

    /**
     * Create an instance of {@link Dtmf.Nomatch }
     * 
     */
    public Dtmf.Nomatch createDtmfNomatch() {
        return new Dtmf.Nomatch();
    }

    /**
     * Create an instance of {@link Msml.Dialogstart }
     * 
     */
    public Msml.Dialogstart createMsmlDialogstart() {
        return new Msml.Dialogstart();
    }

    /**
     * Create an instance of {@link Msml.Dialogend }
     * 
     */
    public Msml.Dialogend createMsmlDialogend() {
        return new Msml.Dialogend();
    }

    /**
     * Create an instance of {@link PrimitiveType }
     * 
     */
    public PrimitiveType createPrimitiveType() {
        return new PrimitiveType();
    }

    /**
     * Create an instance of {@link RootType }
     * 
     */
    public RootType createRootType() {
        return new RootType();
    }

    /**
     * Create an instance of {@link ExitType }
     * 
     */
    public ExitType createExitType() {
        return new ExitType();
    }

    /**
     * Create an instance of {@link Record }
     * 
     */
    public Record createRecord() {
        return new Record();
    }

    /**
     * Create an instance of {@link Dtmf }
     * 
     */
    public Dtmf createDtmf() {
        return new Dtmf();
    }

    /**
     * Create an instance of {@link Play.Audio }
     * 
     */
    public Play.Audio createPlayAudio() {
        return new Play.Audio();
    }

    /**
     * Create an instance of {@link Msml.Join }
     * 
     */
    public Msml.Join createMsmlJoin() {
        return new Msml.Join();
    }

    /**
     * Create an instance of {@link Msml.Dialogstart.Group }
     * 
     */
    public Msml.Dialogstart.Group createMsmlDialogstartGroup() {
        return new Msml.Dialogstart.Group();
    }

    /**
     * Create an instance of {@link Dtmf.Pattern }
     * 
     */
    public Dtmf.Pattern createDtmfPattern() {
        return new Dtmf.Pattern();
    }

    /**
     * Create an instance of {@link StreamType }
     * 
     */
    public StreamType createStreamType() {
        return new StreamType();
    }

    /**
     * Create an instance of {@link AudiomixType }
     * 
     */
    public AudiomixType createAudiomixType() {
        return new AudiomixType();
    }

    /**
     * Create an instance of {@link Msml.Unjoin }
     * 
     */
    public Msml.Unjoin createMsmlUnjoin() {
        return new Msml.Unjoin();
    }

    /**
     * Create an instance of {@link Dtmfgen.Dtmfgenexit }
     * 
     */
    public Dtmfgen.Dtmfgenexit createDtmfgenDtmfgenexit() {
        return new Dtmfgen.Dtmfgenexit();
    }

    /**
     * Create an instance of {@link BasicAudioMixType }
     * 
     */
    public BasicAudioMixType createBasicAudioMixType() {
        return new BasicAudioMixType();
    }

    /**
     * Create an instance of {@link Msml.Modifystream }
     * 
     */
    public Msml.Modifystream createMsmlModifystream() {
        return new Msml.Modifystream();
    }

    /**
     * Create an instance of {@link Dtmf.Noinput }
     * 
     */
    public Dtmf.Noinput createDtmfNoinput() {
        return new Dtmf.Noinput();
    }

    /**
     * Create an instance of {@link BasicVideoLayoutType }
     * 
     */
    public BasicVideoLayoutType createBasicVideoLayoutType() {
        return new BasicVideoLayoutType();
    }

    /**
     * Create an instance of {@link Msml.Reset }
     * 
     */
    public Msml.Reset createMsmlReset() {
        return new Msml.Reset();
    }

    /**
     * Create an instance of {@link Msml.Destroyconference }
     * 
     */
    public Msml.Destroyconference createMsmlDestroyconference() {
        return new Msml.Destroyconference();
    }

    /**
     * Create an instance of {@link Var }
     * 
     */
    public Var createVar() {
        return new Var();
    }

    /**
     * Create an instance of {@link com.richitec.donkey.msml.Event }
     * 
     */
    public com.richitec.donkey.msml.Event createEvent() {
        return new com.richitec.donkey.msml.Event();
    }

    /**
     * Create an instance of {@link StreamType.Gain }
     * 
     */
    public StreamType.Gain createStreamTypeGain() {
        return new StreamType.Gain();
    }

    /**
     * Create an instance of {@link Play }
     * 
     */
    public Play createPlay() {
        return new Play();
    }

    /**
     * Create an instance of {@link ControlType }
     * 
     */
    public ControlType createControlType() {
        return new ControlType();
    }

    /**
     * Create an instance of {@link Msml.Result }
     * 
     */
    public Msml.Result createMsmlResult() {
        return new Msml.Result();
    }

    /**
     * Create an instance of {@link Play.Playexit }
     * 
     */
    public Play.Playexit createPlayPlayexit() {
        return new Play.Playexit();
    }

    /**
     * Create an instance of {@link AudiomixType.Asn }
     * 
     */
    public AudiomixType.Asn createAudiomixTypeAsn() {
        return new AudiomixType.Asn();
    }

    /**
     * Create an instance of {@link StreamType.Clamp }
     * 
     */
    public StreamType.Clamp createStreamTypeClamp() {
        return new StreamType.Clamp();
    }

    /**
     * Create an instance of {@link BasicStreamType }
     * 
     */
    public BasicStreamType createBasicStreamType() {
        return new BasicStreamType();
    }

    /**
     * Create an instance of {@link VideolayoutType.Selector }
     * 
     */
    public VideolayoutType.Selector createVideolayoutTypeSelector() {
        return new VideolayoutType.Selector();
    }

    /**
     * Create an instance of {@link Msml }
     * 
     */
    public Msml createMsml() {
        return new Msml();
    }

    /**
     * Create an instance of {@link Msml.Createconference }
     * 
     */
    public Msml.Createconference createMsmlCreateconference() {
        return new Msml.Createconference();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExitType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "exit", scope = Dtmf.Dtmfexit.class)
    public JAXBElement<ExitType> createDtmfDtmfexitExit(ExitType value) {
        return new JAXBElement<ExitType>(_DtmfDtmfexitExit_QNAME, ExitType.class, Dtmf.Dtmfexit.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "name", scope = com.richitec.donkey.msml.Event.class)
    public JAXBElement<String> createEventName(String value) {
        return new JAXBElement<String>(_EventName_QNAME, String.class, com.richitec.donkey.msml.Event.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "value", scope = com.richitec.donkey.msml.Event.class)
    public JAXBElement<String> createEventValue(String value) {
        return new JAXBElement<String>(_EventValue_QNAME, String.class, com.richitec.donkey.msml.Event.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ControlType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "control")
    public JAXBElement<ControlType> createControl(ControlType value) {
        return new JAXBElement<ControlType>(_Control_QNAME, ControlType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Record }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "record", substitutionHeadNamespace = "", substitutionHeadName = "primitive")
    public JAXBElement<Record> createRecord(Record value) {
        return new JAXBElement<Record>(_Record_QNAME, Record.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Var }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "var", substitutionHeadNamespace = "", substitutionHeadName = "media")
    public JAXBElement<Var> createVar(Var value) {
        return new JAXBElement<Var>(_Var_QNAME, Var.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Play }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "play", substitutionHeadNamespace = "", substitutionHeadName = "primitive")
    public JAXBElement<Play> createPlay(Play value) {
        return new JAXBElement<Play>(_Play_QNAME, Play.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Dtmf }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "dtmf", substitutionHeadNamespace = "", substitutionHeadName = "primitive")
    public JAXBElement<Dtmf> createDtmf(Dtmf value) {
        return new JAXBElement<Dtmf>(_Dtmf_QNAME, Dtmf.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MediaType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "media")
    public JAXBElement<MediaType> createMedia(MediaType value) {
        return new JAXBElement<MediaType>(_Media_QNAME, MediaType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PrimitiveType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "primitive")
    public JAXBElement<PrimitiveType> createPrimitive(PrimitiveType value) {
        return new JAXBElement<PrimitiveType>(_Primitive_QNAME, PrimitiveType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Dtmfgen }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "dtmfgen", substitutionHeadNamespace = "", substitutionHeadName = "primitive")
    public JAXBElement<Dtmfgen> createDtmfgen(Dtmfgen value) {
        return new JAXBElement<Dtmfgen>(_Dtmfgen_QNAME, Dtmfgen.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Play.Audio }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "audio", scope = Play.class)
    public JAXBElement<Play.Audio> createPlayAudio(Play.Audio value) {
        return new JAXBElement<Play.Audio>(_PlayAudio_QNAME, Play.Audio.class, Play.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExitType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "exit", scope = Record.Recordexit.class)
    public JAXBElement<ExitType> createRecordRecordexitExit(ExitType value) {
        return new JAXBElement<ExitType>(_DtmfDtmfexitExit_QNAME, ExitType.class, Record.Recordexit.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "confid", scope = Msml.Result.class)
    public JAXBElement<String> createMsmlResultConfid(String value) {
        return new JAXBElement<String>(_MsmlResultConfid_QNAME, String.class, Msml.Result.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "dialogid", scope = Msml.Result.class)
    public JAXBElement<String> createMsmlResultDialogid(String value) {
        return new JAXBElement<String>(_MsmlResultDialogid_QNAME, String.class, Msml.Result.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExitType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "exit", scope = Play.Playexit.class)
    public JAXBElement<ExitType> createPlayPlayexitExit(ExitType value) {
        return new JAXBElement<ExitType>(_DtmfDtmfexitExit_QNAME, ExitType.class, Play.Playexit.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExitType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "exit", scope = Dtmfgen.Dtmfgenexit.class)
    public JAXBElement<ExitType> createDtmfgenDtmfgenexitExit(ExitType value) {
        return new JAXBElement<ExitType>(_DtmfDtmfexitExit_QNAME, ExitType.class, Dtmfgen.Dtmfgenexit.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "name", scope = Msml.Event.class)
    public JAXBElement<String> createMsmlEventName(String value) {
        return new JAXBElement<String>(_EventName_QNAME, String.class, Msml.Event.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "value", scope = Msml.Event.class)
    public JAXBElement<String> createMsmlEventValue(String value) {
        return new JAXBElement<String>(_EventValue_QNAME, String.class, Msml.Event.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExitType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "exit", scope = Dtmf.Noinput.class)
    public JAXBElement<ExitType> createDtmfNoinputExit(ExitType value) {
        return new JAXBElement<ExitType>(_DtmfDtmfexitExit_QNAME, ExitType.class, Dtmf.Noinput.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExitType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "exit", scope = Dtmf.Pattern.class)
    public JAXBElement<ExitType> createDtmfPatternExit(ExitType value) {
        return new JAXBElement<ExitType>(_DtmfDtmfexitExit_QNAME, ExitType.class, Dtmf.Pattern.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExitType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "exit", scope = Dtmf.Nomatch.class)
    public JAXBElement<ExitType> createDtmfNomatchExit(ExitType value) {
        return new JAXBElement<ExitType>(_DtmfDtmfexitExit_QNAME, ExitType.class, Dtmf.Nomatch.class, value);
    }

}
